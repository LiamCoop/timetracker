// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// Users table - compatible with Clerk authentication
model User {
  id        String   @id @default(cuid())
  email     String   @unique
  name      String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  // Relations
  projects    Project[]
  timeEntries TimeEntry[]
}

// Projects/Clients
model Project {
  id          String   @id @default(cuid())
  name        String
  description String?
  color       String   @default("#3B82F6") // Hex color code
  isActive    Boolean  @default(true)      // Soft delete flag
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  
  // Foreign Keys
  userId      String
  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  
  // Relations
  timeEntries TimeEntry[]
  
  @@unique([userId, name]) // Prevent duplicate project names per user
}

// Time Entries (placeholder for future implementation)
model TimeEntry {
  id          String    @id @default(cuid())
  startTime   DateTime
  endTime     DateTime?
  description String?
  duration    Int?      // Duration in minutes (calculated field)
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  
  // Foreign Keys
  userId      String
  projectId   String
  user        User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  project     Project   @relation(fields: [projectId], references: [id], onDelete: Restrict)
  
  @@index([userId, startTime])
  @@index([projectId])
}

// Daily motivational quotes
model DailyQuotes {
  id        String   @id
  quote     String
  author    String?
  category  String?
  isActive  Boolean  @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  userId    String
}
